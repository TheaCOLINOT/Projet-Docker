version: "3.7"

services:
  db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: example_app
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
    networks:
      - traefik

  php1:
    container_name: php1
    restart: always
    build:
      context: ./site1
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - traefik
    # Optionnel : retirez ce "command" si vous préférez lancer la migration manuellement
    command: >
      sh -c "php artisan migrate:fresh --seed && php-fpm"

  php2:
    container_name: php2
    restart: always
    build:
      context: ./site2
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - traefik

  nginx1:
    image: nginx:latest
    container_name: nginx1
    depends_on:
      - php1
    volumes:
      - ./nginx/nginx1.conf:/etc/nginx/conf.d/default.conf
      - ./site1:/var/www/html
    labels:
      - "traefik.enable=true"
      # Routage HTTP -> sur le port 80
      - "traefik.http.routers.nginx1.rule=Host(`site1.local`)"
      - "traefik.http.routers.nginx1.entrypoints=web"
      # Routage HTTPS -> sur le port 443
      - "traefik.http.routers.nginx1-secure.rule=Host(`site1.local`)"
      - "traefik.http.routers.nginx1-secure.entrypoints=websecure"
      - "traefik.http.routers.nginx1-secure.tls=true"
      # On N'UTILISE PAS 'tls.certresolver' => on a un certificat auto-signé
      - "traefik.http.services.nginx1.loadbalancer.server.port=80"
    networks:
      - traefik

  nginx2:
    image: nginx:latest
    container_name: nginx2
    depends_on:
      - php2
    volumes:
      - ./nginx/nginx2.conf:/etc/nginx/conf.d/default.conf
      - ./site2:/var/www/html
    labels:
      - "traefik.enable=true"
      # HTTP
      - "traefik.http.routers.nginx2.rule=Host(`site2.local`)"
      - "traefik.http.routers.nginx2.entrypoints=web"
      # HTTPS
      - "traefik.http.routers.nginx2-secure.rule=Host(`site2.local`)"
      - "traefik.http.routers.nginx2-secure.entrypoints=websecure"
      - "traefik.http.routers.nginx2-secure.tls=true"
      - "traefik.http.services.nginx2.loadbalancer.server.port=80"
    networks:
      - traefik

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      # Active l'API Traefik sur le port 8080 (facultatif)
      - "--api.insecure=true"
      # Providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      # EntryPoints
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # (facultatif) pour voir le dashboard Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # On monte le dossier qui contient le certificat auto-signé
      - "./certs:/certs"
      # On monte la config dynamique
      - "./traefik_dynamic.yml:/etc/traefik/dynamic/traefik_dynamic.yml:ro"
    networks:
      - traefik

networks:
  traefik:
    external: false

volumes:
  mysql_data:
